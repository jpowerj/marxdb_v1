{
  "version": 3,
  "sources": ["../../../app/routes/chron.tsx"],
  "sourcesContent": ["import * as React from 'react';\nimport {\n  Form, Link, NavLink, Outlet,\n  useLoaderData, useLocation \n} from \"@remix-run/react\";\nimport Box from '@mui/material/Box';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport Typography from \"@mui/material/Typography\";\nimport Button from '@mui/material/Button';\nimport ArrowBack from '@mui/icons-material/ArrowBack';\n\n\nfunction EventDetailsPage() {\n  //const backSection = getBackSection(ent_id);\n  return (\n    <div>\n      <div>\n        <NavLink to={`../chron/`}>\n          <Button startIcon={<ArrowBack />}>\n            Back to Chronicle\n          </Button>\n        </NavLink>\n      </div>\n      <div>\n        <Outlet />\n      </div>\n      <div>\n        <NavLink to={`../chron/`}>\n          <Button startIcon={<ArrowBack />}>\n            Back to Chronicle\n          </Button>\n        </NavLink>\n      </div>\n    </div>\n  )\n}\n\nfunction CurrentRoute() {\n  const location = useLocation();\n\n  return (\n    <Typography variant=\"body2\" sx={{ pb: 2 }} color=\"text.secondary\">\n      Current route: {location.pathname}\n    </Typography>\n  );\n}\n\nexport default function ChronPage() {\n  let location = useLocation();\n  let pathname = location.pathname;\n  if (pathname.endsWith(\"/\")) {\n    pathname = pathname.substring(0, pathname.length - 1);\n  }\n  // And now check if it's a detail or main page\n  /*\n  if (!pathname.endsWith(\"chron\")) {\n    return EventDetailsPage();\n  }\n  */\n  /*\n  const [activeTab, setActiveTab] = React.useState(0);\n  React.useEffect(() => {\n    setActiveTab(1);\n  }, []);\n  const handleChange = (event: React.SyntheticEvent, newValue: number) => {\n    setActiveTab(newValue);\n  };\n  */\n  return (\n    <Outlet />\n  );\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAgDe,SAAR,YAA6B;AAClC,MAAI,WAAW,YAAY;AAC3B,MAAI,WAAW,SAAS;AACxB,MAAI,SAAS,SAAS,GAAG,GAAG;AAC1B,eAAW,SAAS,UAAU,GAAG,SAAS,SAAS,CAAC;AAAA,EACtD;AAgBA,SACE,mDAAC,YAAD;AAAA;AAAA;AAAA;AAAA,SAAQ;AAEZ;",
  "names": []
}
