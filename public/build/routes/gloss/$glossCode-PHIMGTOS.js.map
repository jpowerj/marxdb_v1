{
  "version": 3,
  "sources": ["empty-module:~/models/entity.server", "../../../../app/routes/gloss/$glossCode.tsx"],
  "sourcesContent": ["module.exports = {};", "import * as React from 'react';\r\nimport type { LoaderArgs } from \"@remix-run/node\";\r\nimport invariant from \"tiny-invariant\";\r\nimport { useLoaderData, useParams, useFetcher, NavLink } from \"@remix-run/react\";\r\nimport { json } from \"@remix-run/node\";\r\n\r\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Paper from '@mui/material/Paper';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport InfoIcon from '@mui/icons-material/Info';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nimport MaterialTable, { MTableToolbar, MTableBody, MTableCell, MTableHeader, MTablePagination } from \"@material-table/core\";\r\n\r\nimport { EntityDetailsPanel } from '~/components/entityDetails'\r\nimport { getEntity } from '~/models/entity.server';\r\n\r\nexport async function loader({ request, params }: LoaderArgs) {\r\n    invariant(params.glossCode, \"Expected params.glossCode\");\r\n    let glossCode = params.glossCode;\r\n    console.log(\"[$glossCode.tsx] glossCode: \" + glossCode);\r\n    let entityData = await getEntity(glossCode);\r\n    return { glossCode: glossCode, entityData: entityData };\r\n}\r\n\r\nexport default function EntityDetailsPage() {\r\n    const reqData = useLoaderData();\r\n    let entityData = reqData.entityData;\r\n    return (\r\n        <div>\r\n            <div>\r\n                <NavLink to={`../../gloss/`}>\r\n                    <Button startIcon={<ArrowBackIcon />}>\r\n                        Back to Glossary\r\n                    </Button>\r\n                </NavLink>\r\n            </div>\r\n            <Paper>\r\n                <EntityDetailsPanel data={entityData} />\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA,WAAO,UAAU,CAAC;AAAA;AAAA;;;ACElB;AAIA,uBAA0B;AAE1B;AACA;AAQA,oBAA0B;AAjB1B;AA2Be,SAAR,oBAAqC;AACxC,QAAM,UAAU,cAAc;AAC9B,MAAI,aAAa,QAAQ;AACzB,SACI,mDAAC;AAAA,IACG;AAAA,yDAAC;AAAA,QACG,6DAAC;AAAA,UAAQ,IAAI;AAAA,UACT,6DAAC;AAAA,YAAO,WAAW,mDAAC,iBAAAA,SAAA,IAAD;AAAA;AAAA;AAAA;AAAA,mBAAe;AAAA,YAAI;AAAA,aAAtC;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,WAHJ;AAAA;AAAA;AAAA;AAAA,eAIA;AAAA,SALJ;AAAA;AAAA;AAAA;AAAA,aAMA;AAAA,MACA,mDAAC;AAAA,QACG,6DAAC;AAAA,UAAmB,MAAM;AAAA,WAA1B;AAAA;AAAA;AAAA;AAAA,eAAsC;AAAA,SAD1C;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA;AAAA,KAVJ;AAAA;AAAA;AAAA;AAAA,SAWA;AAER;",
  "names": ["ArrowBackIcon"]
}
