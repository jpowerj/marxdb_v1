{
  "version": 3,
  "sources": ["../../../app/components/entityDetails.tsx"],
  "sourcesContent": ["import * as React from 'react';\r\n\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Chip from '@mui/material/Chip';\r\nimport Fab from '@mui/material/Fab';\r\nimport InfoIcon from '@mui/icons-material/Info';\r\nimport LinkIcon from '@mui/icons-material/Link';\r\nimport Paper from '@mui/material/Paper';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport Typography from '@mui/material/Typography';\r\nimport { NavLink } from '@remix-run/react';\r\n\r\nimport OpenInNewIcon from '@mui/icons-material/OpenInNew';\r\nimport KeyboardArrowRight from '@mui/icons-material/KeyboardArrowRight';\r\n\r\nexport function EntityDetailsPanel(props: any) {\r\n    let rowData = props.data;\r\n    console.log(\"[entityDetails] rowData: \" + Object.keys(rowData));\r\n    const [tooltipText, setTooltipText] = React.useState(\"Copy Link\");\r\n    const handleTooltipClose = () => {\r\n        setTooltipText(\"Copy Link\");\r\n    }\r\n    return (\r\n        <div\r\n            style={{\r\n                fontSize: 16,\r\n                padding: 5,\r\n                margin: 5,\r\n            }}\r\n        >\r\n            <Box sx={{ margin: 1 }}>\r\n                <div className=\"grid grid-cols-2 mb-2\">\r\n                    <div className=\"h-full\">\r\n                        <Typography variant=\"h5\" className=\"inline-flex align-middle font-bold\">\r\n                            {rowData.id}\r\n                        </Typography>\r\n                    </div>\r\n                    <div className=\"self-center float-right\">\r\n                        <Tooltip title={tooltipText}>\r\n                            <Chip\r\n                                icon={<LinkIcon />}\r\n                                label={rowData.id}\r\n                                variant=\"outlined\"\r\n                                className=\"float-right\"\r\n                                onMouseLeave={handleTooltipClose}\r\n                                onClick={() => {\r\n                                    //alert('clicked');\r\n                                    navigator.clipboard.writeText(`https://marxdb.com/gloss/${rowData.id}`).then(\r\n                                        function () {\r\n                                            /* clipboard successfully set */\r\n                                            console.log('Success! The text was copied to your clipboard');\r\n                                            setTooltipText(\"Link Copied!\");\r\n                                        },\r\n                                        function () {\r\n                                            /* clipboard write failed */\r\n                                            console.log('Oops! Your browser does not support the Clipboard API');\r\n                                        }\r\n                                    )\r\n                                }}\r\n                            />\r\n                        </Tooltip>\r\n                    </div>\r\n                </div>\r\n                <Table size=\"small\" aria-label=\"details\">\r\n                    <TableBody>\r\n                        <TableRow key='header' sx={{ borderTop: '1px solid rgba(224, 224, 224, 1)' }}>\r\n                            <TableCell\r\n                                component=\"th\"\r\n                                scope=\"row\"\r\n                                sx={{ fontWeight: 'bold' }}\r\n                            >\r\n                                Heading\r\n                            </TableCell>\r\n                            <TableCell colSpan={5} className=\"font-bold\">{rowData.header}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow key='desc' sx={{ borderTop: '1px solid rgba(224, 224, 224, 1)' }}>\r\n                            <TableCell\r\n                                component=\"th\"\r\n                                scope=\"row\"\r\n                                sx={{ fontWeight: 'bold' }}\r\n                            >\r\n                                Description\r\n                            </TableCell>\r\n                            <TableCell colSpan={5} className=\"font-mono\">{rowData.text}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow key='dates'>\r\n                            <TableCell sx={{ fontWeight: 'bold' }}>\r\n                                Written\r\n                            </TableCell>\r\n                            <TableCell>\r\n                                {rowData.written}\r\n                            </TableCell>\r\n                            <TableCell sx={{ fontWeight: 'bold' }}>\r\n                                Dated\r\n                            </TableCell>\r\n                            <TableCell>\r\n                                {Object.keys(rowData).indexOf(\"dated\") > - 1 ? rowData.dated : \"NA\"}\r\n                            </TableCell>\r\n                            <TableCell sx={{ fontWeight: 'bold' }}>\r\n                                Published\r\n                            </TableCell>\r\n                            <TableCell>\r\n                                {Object.keys(rowData).indexOf(\"published\") > - 1 ? rowData.published : \"NA\"}\r\n                            </TableCell>\r\n                        </TableRow>\r\n                        {(Object.keys(rowData).indexOf(\"lang_orig\") > -1) &&\r\n                            <TableRow key='langs' sx={{ borderTop: '1px solid rgba(224, 224, 224, 1)' }}>\r\n                                <TableCell\r\n                                    component=\"th\"\r\n                                    scope=\"row\"\r\n                                    sx={{ fontWeight: 'bold' }}\r\n                                >\r\n                                    Language(s)\r\n                                </TableCell>\r\n                                <TableCell colSpan={5}>{rowData.lang_orig.join(\", \")}</TableCell>\r\n                            </TableRow>\r\n                        }\r\n                        {(Object.keys(rowData).indexOf(\"source\") > -1) &&\r\n                            <TableRow key='sources' sx={{ borderTop: '1px solid rgba(224, 224, 224, 1)' }}>\r\n                                <TableCell\r\n                                    component=\"th\"\r\n                                    scope=\"row\"\r\n                                    sx={{ fontWeight: 'bold' }}\r\n                                >\r\n                                    Source(s)\r\n                                </TableCell>\r\n                                <TableCell colSpan={5}>{rowData.source}</TableCell>\r\n                            </TableRow>\r\n                        }\r\n                        {(Object.keys(rowData).indexOf(\"reprint\") > -1) &&\r\n                            <TableRow key='reprints' sx={{ borderTop: '1px solid rgba(224, 224, 224, 1)' }}>\r\n                                <TableCell\r\n                                    component=\"th\"\r\n                                    scope=\"row\"\r\n                                    sx={{ fontWeight: 'bold' }}\r\n                                >\r\n                                    Reprints\r\n                                </TableCell>\r\n                                <TableCell colSpan={5}>{rowData.reprint}</TableCell>\r\n                            </TableRow>\r\n                        }\r\n                        {(Object.keys(rowData).indexOf(\"more_info\") > -1) &&\r\n                            <TableRow key='misc' sx={{ borderTop: '1px solid rgba(224, 224, 224, 1)' }}>\r\n                                <TableCell\r\n                                    component=\"th\"\r\n                                    scope=\"row\"\r\n                                    sx={{ fontWeight: 'bold' }}\r\n                                >\r\n                                    Misc\r\n                                </TableCell>\r\n                                <TableCell colSpan={5}>{rowData.more_info}</TableCell>\r\n                            </TableRow>\r\n                        }\r\n                        {(Object.keys(rowData).indexOf(\"chron_ref_ids\") > -1) &&\r\n                            <TableRow key='chronrefs' sx={{ borderTop: '1px solid rgba(224, 224, 224, 1)' }}>\r\n                                <TableCell\r\n                                    component=\"th\"\r\n                                    scope=\"row\"\r\n                                    sx={{ fontWeight: 'bold' }}\r\n                                >\r\n                                    Chronicle References\r\n                                </TableCell>\r\n                                <TableCell colSpan={5}>{rowData.chron_ref_ids.map((item: string) => getChronRefLink(item))}</TableCell>\r\n                            </TableRow>\r\n                        }\r\n                    </TableBody>\r\n                </Table>\r\n            </Box>\r\n        </div>\r\n    );\r\n}"],
  "mappings": "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",
  "names": ["LinkIcon"]
}
