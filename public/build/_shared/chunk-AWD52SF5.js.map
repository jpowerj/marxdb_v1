{
  "version": 3,
  "sources": ["../../../app/components/entryDetails.tsx"],
  "sourcesContent": ["import * as React from 'react';\r\n\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Chip from '@mui/material/Chip';\r\nimport Fab from '@mui/material/Fab';\r\nimport InfoIcon from '@mui/icons-material/Info';\r\nimport LinkIcon from '@mui/icons-material/Link';\r\nimport Paper from '@mui/material/Paper';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport Typography from '@mui/material/Typography';\r\nimport { NavLink } from '@remix-run/react';\r\n\r\nimport OpenInNewIcon from '@mui/icons-material/OpenInNew';\r\nimport KeyboardArrowRight from '@mui/icons-material/KeyboardArrowRight';\r\n\r\n/*\r\nlet regCodeDict: { [key: string]: string } = {\r\n    \"marx\": \"Marx\",\r\n    \"engels\": \"Engels\",\r\n    \"me\": \"Marx-Engels Joint Works\",\r\n    \"st\": \"Sources/Translations\",\r\n}\r\nfunction regCodeToAuth(authName: string) {\r\n    return titleDict[authName];\r\n}\r\n*/\r\n\r\n/*\r\nfunction getChronRefLink(chronRefId: string) {\r\n    let relUrl = \"../chron/\" + chronRefId;\r\n    return (\r\n        <Fab variant=\"extended\" sx={{ boxShadow: 0, border: 1 }} className=\"m-2 p-2 cursor-pointer\" size=\"small\" onClick={() => window.open(relUrl, '_blank', 'noopener,noreferrer')}>\r\n            {\"18\" + chronRefId}\r\n            <OpenInNewIcon sx={{ ml: 1 }} fontSize=\"small\" />\r\n        </Fab>\r\n    );\r\n}\r\n*/\r\n\r\nfunction getChronRefLink(chronRefId: string) {\r\n    let relUrl = \"../../chron/\" + chronRefId;\r\n    return (\r\n        <NavLink to={relUrl} rel=\"noopener,noreferrer\" target=\"_blank\" className=\"m-2 p-2 border border-solid border-black cursor-pointer rounded-full\">\r\n            {\"18\" + chronRefId}\r\n            <OpenInNewIcon sx={{ ml: 1 }} fontSize=\"small\" />\r\n        </NavLink>\r\n    );\r\n}\r\n\r\nexport function EntryDetailsPanel(props: any) {\r\n    let rowData = props.data;\r\n    //console.log(rowData);\r\n    const [tooltipText, setTooltipText] = React.useState(\"Copy Link\");\r\n    const handleTooltipClose = () => {\r\n        setTooltipText(\"Copy Link\");\r\n    }\r\n    return (\r\n        <div\r\n            style={{\r\n                fontSize: 16,\r\n                padding: 5,\r\n                margin: 5,\r\n            }}\r\n        >\r\n            <Box sx={{ margin: 1 }}>\r\n                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                    {rowData.title}\r\n                    {rowData.dubious && \r\n                      <Tooltip title=\"Authorship of this text is disputed (see description)\">\r\n                      <Chip\r\n                        icon={<InfoIcon />}\r\n                        label=\"Dubious\"\r\n                        className=\"m-2 cursor-pointer\"\r\n                      />\r\n                      </Tooltip>\r\n                    }\r\n                    <Tooltip title={tooltipText}>\r\n                    <Chip\r\n                      icon={<LinkIcon />}\r\n                      label={rowData.entry_id}\r\n                      variant=\"outlined\"\r\n                      className=\"float-right\"\r\n                      onMouseLeave={handleTooltipClose}\r\n                      onClick={() => {\r\n                        //alert('clicked');\r\n                        navigator.clipboard.writeText(`https://marxdb.com/reg/${rowData.entry_id}`).then(\r\n                            function () {\r\n                                /* clipboard successfully set */\r\n                                console.log('Success! The text was copied to your clipboard');\r\n                                setTooltipText(\"Link Copied!\");\r\n                            },\r\n                            function () {\r\n                                /* clipboard write failed */\r\n                                console.log('Oops! Your browser does not support the Clipboard API');\r\n                            }\r\n                          )\r\n                      }}\r\n                    />\r\n                    </Tooltip>\r\n                </Typography>\r\n                <Table size=\"small\" aria-label=\"details\">\r\n                    <TableBody>\r\n                        <TableRow key='desc' sx={{ borderTop: '1px solid rgba(224, 224, 224, 1)' }}>\r\n                            <TableCell\r\n                                component=\"th\"\r\n                                scope=\"row\"\r\n                                sx={{ fontWeight: 'bold' }}\r\n                            >\r\n                                Description\r\n                            </TableCell>\r\n                            <TableCell colSpan={5} className=\"font-mono\">{rowData.full_text}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow key='dates'>\r\n                            <TableCell sx={{ fontWeight: 'bold' }}>\r\n                                Written\r\n                            </TableCell>\r\n                            <TableCell>\r\n                                {Object.keys(rowData).indexOf(\"written\") > - 1 ? rowData.written : \"NA\"}\r\n                            </TableCell>\r\n                            <TableCell sx={{ fontWeight: 'bold' }}>\r\n                                Dated\r\n                            </TableCell>\r\n                            <TableCell>\r\n                                {Object.keys(rowData).indexOf(\"dated\") > - 1 ? rowData.dated : \"NA\"}\r\n                            </TableCell>\r\n                            <TableCell sx={{ fontWeight: 'bold' }}>\r\n                                Published\r\n                            </TableCell>\r\n                            <TableCell>\r\n                                {Object.keys(rowData).indexOf(\"published\") > - 1 ? rowData.published : \"NA\"}\r\n                            </TableCell>\r\n                        </TableRow>\r\n                        {(Object.keys(rowData).indexOf(\"lang_orig\") > -1) &&\r\n                            <TableRow key='langs' sx={{ borderTop: '1px solid rgba(224, 224, 224, 1)' }}>\r\n                                <TableCell\r\n                                    component=\"th\"\r\n                                    scope=\"row\"\r\n                                    sx={{ fontWeight: 'bold' }}\r\n                                >\r\n                                    Language(s)\r\n                                </TableCell>\r\n                                <TableCell colSpan={5}>{rowData.lang_orig.join(\", \")}</TableCell>\r\n                            </TableRow>\r\n                        }\r\n                        {(Object.keys(rowData).indexOf(\"source\") > -1) &&\r\n                            <TableRow key='sources' sx={{ borderTop: '1px solid rgba(224, 224, 224, 1)' }}>\r\n                                <TableCell\r\n                                    component=\"th\"\r\n                                    scope=\"row\"\r\n                                    sx={{ fontWeight: 'bold' }}\r\n                                >\r\n                                    Source(s)\r\n                                </TableCell>\r\n                                <TableCell colSpan={5}>{rowData.source}</TableCell>\r\n                            </TableRow>\r\n                        }\r\n                        {(Object.keys(rowData).indexOf(\"reprint\") > -1) &&\r\n                            <TableRow key='reprints' sx={{ borderTop: '1px solid rgba(224, 224, 224, 1)' }}>\r\n                                <TableCell\r\n                                    component=\"th\"\r\n                                    scope=\"row\"\r\n                                    sx={{ fontWeight: 'bold' }}\r\n                                >\r\n                                    Reprints\r\n                                </TableCell>\r\n                                <TableCell colSpan={5}>{rowData.reprint}</TableCell>\r\n                            </TableRow>\r\n                        }\r\n                        {(Object.keys(rowData).indexOf(\"more_info\") > -1) &&\r\n                            <TableRow key='misc' sx={{ borderTop: '1px solid rgba(224, 224, 224, 1)' }}>\r\n                                <TableCell\r\n                                    component=\"th\"\r\n                                    scope=\"row\"\r\n                                    sx={{ fontWeight: 'bold' }}\r\n                                >\r\n                                    Misc\r\n                                </TableCell>\r\n                                <TableCell colSpan={5}>{rowData.more_info}</TableCell>\r\n                            </TableRow>\r\n                        }\r\n                        {(Object.keys(rowData).indexOf(\"chron_ref_ids\") > -1) &&\r\n                            <TableRow key='chronrefs' sx={{ borderTop: '1px solid rgba(224, 224, 224, 1)' }}>\r\n                                <TableCell\r\n                                    component=\"th\"\r\n                                    scope=\"row\"\r\n                                    sx={{ fontWeight: 'bold' }}\r\n                                >\r\n                                    Chronicle References\r\n                                </TableCell>\r\n                                <TableCell colSpan={5}>{rowData.chron_ref_ids.map((item: string) => getChronRefLink(item))}</TableCell>\r\n                            </TableRow>\r\n                        }\r\n                    </TableBody>\r\n                </Table>\r\n            </Box>\r\n        </div>\r\n    );\r\n}"],
  "mappings": "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",
  "names": ["OpenInNewIcon", "InfoIcon", "LinkIcon"]
}
